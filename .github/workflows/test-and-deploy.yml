name: Test and Deploy

on: 
    push:
    pull_request:
        branches:
            - staging
            - main

jobs:
    test-server:
        uses: ./.github/workflows/test-server.yml
        with:
            ref: ${{ github.ref }}
    test-client:
        uses: ./.github/workflows/test-client.yml
        with:
            ref: ${{ github.ref }}

    test-e2e:
        needs: [ test-server, test-client ]
        uses: ./.github/workflows/e2e.yml
        with:
            ref: ${{ github.ref }}

    deploy-server:
        needs: [ test-e2e ]
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request' && github.base_ref == 'staging'
    
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          - uses: actions/checkout@v2
    
          - name: Set short git commit SHA
            id: vars
            run: |
              calculatedSha=$(git rev-parse --short ${{ github.sha }})
              echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
    
          # login with Docker
          - uses: docker/login-action@v1
            name: Login to Docker Hub
            with:
              # generate some credentials from Dockerhub and store them into the repo secrets
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          # prepare buildx for docker
          - uses: docker/setup-buildx-action@v1
            name: Set up Docker Buildx
    
          # build an push the newly created image
          - uses: docker/build-push-action@v2
            name: Build and push
            with:
              context: ./backend
              file: ./backend/Dockerfile.prod
              push: true
              tags: |
                ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_SERVER_IMAGE_NAME }}:latest
                ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_SERVER_IMAGE_NAME }}:${{ env.COMMIT_SHORT_SHA }}
                
    deploy-client:
        needs: [ test-e2e ]
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request' && github.base_ref == 'staging'

    
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so yor job can access
          - name: Check out code
            uses: actions/checkout@v2
    
          - name: Set short git commit SHA
            id: vars
            run: |
              calculatedSha=$(git rev-parse --short ${{ github.sha }})
              echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
              
          # login with Docker
          - uses: docker/login-action@v1
            name: Login to Docker Hub
            with:
              # generate some credentials from Dockerhub and store them into the repo secrets
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          # prepare buildx for docker
          - uses: docker/setup-buildx-action@v1
            name: Set up Docker Buildx
    
          # build an push the newly created image
          - uses: docker/build-push-action@v2
            name: Build and push
            with:
              context: ./frontend
              file: ./frontend/Dockerfile.prod
              push: true
              tags: |
                ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_CLIENT_IMAGE_NAME }}:latest
                ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_CLIENT_IMAGE_NAME }}:${{ env.COMMIT_SHORT_SHA }}    