# .github/workflows/staging-server.yml
name: Compile and push server image

on:
  # Only use workflow_run for the automated pipeline
  workflow_run:
    workflows: ["test-server-workflow"]
    types:
      - completed
    branches:
      - staging
  
  # Keep manual trigger option
  workflow_dispatch:

jobs:
  build:
    # This condition only applies to workflow_run events
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      # login with Docker
      - uses: docker/login-action@v1
        name: Login to Docker Hub
        with:
          # generate some credentials from Dockerhub and store them into the repo secrets
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # prepare buildx for docker
      - uses: docker/setup-buildx-action@v1
        name: Set up Docker Buildx

      # build an push the newly created image
      - uses: docker/build-push-action@v2
        name: Build and push
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_SERVER_IMAGE_NAME }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_HUB_CLIENT_IMAGE_NAME }}:${{ env.COMMIT_SHORT_SHA }}

