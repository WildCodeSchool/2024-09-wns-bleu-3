services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 1s
      timeout: 2s
      retries: 100

  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy

  backend:
    build: ./backend
    volumes:
      - ./backend/src:/app/src
    environment:
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  api_gateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 7000:80

volumes:
  postgres_data:
