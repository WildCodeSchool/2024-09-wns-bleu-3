services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 100
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy
    restart: always

  backend:
    build: ./backend
    volumes:
      - ./backend/src:/app/src
    environment:
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: 'curl --fail --request GET --url "http://localhost:4000" || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    depends_on:
      db:
        condition: service_healthy

  api_gateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 7000:80

volumes:
  postgres_data:
