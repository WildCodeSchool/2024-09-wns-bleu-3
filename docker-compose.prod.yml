version: '3'

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 1s
      timeout: 2s
      retries: 100
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy

  backend:
    image: s0ma8/healthcheck-backend:latest
    command: sh -c "npm run startprod"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    healthcheck:
      test: 'curl --fail --request GET --url "http://localhost:4000/graphql/health" || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: s0ma8/healthcheck-frontend:latest
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_BACKEND_URL=https://staging.092024-bleu-3.wns.wilders.dev/api
      - VITE_NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100

  api_gateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - 3030:80

volumes:
  postgres_data:
